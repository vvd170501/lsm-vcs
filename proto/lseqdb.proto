syntax = "proto3";

import "google/protobuf/empty.proto";

package lseqdb;

message ReplicaKey {
  string key = 1;
  optional int32 replica_id = 2; // if not defined, then use selfId
}

message Value {
  string value = 1;
  string lseq = 2;
}

message LSeq {
  string lseq = 1;
}

message EventsRequest {
  int32 replica_id = 1;
  optional string lseq = 2; // if defined, it returns events after lseq
  optional string key = 3; // if defined, then filter output by key
  optional uint32 limit = 4; // if not defined, then unlimited
}

message PutRequest {
  string key = 1;
  string value = 2;
}

message SeekGetRequest {
  string lseq = 1;
  optional string key = 2; // if defined, then filter output by key
  optional uint32 limit = 3; // if not defined, then unlimited
}

message DBItems {
  message DbItem {
    string lseq = 1;
    string key = 2;
    string value = 3;
  }

  repeated DbItem items = 1;
  int32 replica_id = 2;
}

service LSeqDatabase {
  //  Database API
  rpc GetValue(ReplicaKey) returns (Value) {}
  rpc Put(PutRequest) returns (LSeq) {}
  //  Supports search only within one replica
  rpc SeekGet(SeekGetRequest) returns (DBItems) {}
  rpc GetReplicaEvents(EventsRequest) returns (DBItems) {}

  //  System calls for synchronization
  rpc SyncGet_(SyncGetRequest) returns (LSeq) {}
  rpc SyncPut_(DBItems) returns (google.protobuf.Empty) {}
}

message SyncGetRequest {
  int32 replica_id = 1;
}
